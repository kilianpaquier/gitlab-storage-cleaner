# Code generated by craft; DO NOT EDIT.

name: Integration
run-name: Integration

on:
  pull_request:
  push:
    branches:
      - main
      - staging
      - develop
      - v[0-9]+
  workflow_dispatch:

jobs:

  go-vulncheck:
    runs-on: ubuntu-latest
    steps:
      - uses: golang/govulncheck-action@v1
        with:
          check-latest: true
          go-package: ./...
          go-version-file: go.mod

  go-lint:
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          cache: false
          check-latest: true
          go-version-file: go.mod
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: golangci/golangci-lint-action@v4
        with:
          args: --config .golangci.yml --timeout 240s --fast --sort-results --out-format colored-line-number

  go-test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            args: CGO_ENABLED="0"
          - os: ubuntu-latest
            args: CGO_ENABLED="0"
          - os: windows-latest
            args: env CGO_ENABLED="0"
    runs-on: ${{ matrix.os }}
    env:
      OS: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: go.mod
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: ${{ matrix.args }} go test ./... -coverpkg="./..." -covermode="count" -coverprofile="coverage.out"
      - uses: codecov/codecov-action@v4
        if: ${{ ! startsWith(github.base_ref, 'dependabot') }} # ignore codecov on dependabot branches
        with:
          codecov_yml_path: .codecov.yml
          disable_search: true
          env_vars: OS
          fail_ci_if_error: true
          file: coverage.out
          slug: ${{ github.repository }}
          token: ${{ secrets.CODECOV_TOKEN }}

  docker-hadolint:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@v3.1.0
        continue-on-error: true # enforce scan upload to codeql
        with:
          format: sarif
          output-file: hadolint-results.sarif
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: hadolint-results.sarif
          category: docker-hadolint
      - id: hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          format: tty